name: CI/CD

on:
  push:
    branches: ['main']
    paths:
      - 'iac/**'
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/**'
  pull_request:
    branches: ['main']
    paths:
      - 'iac/**'
      - 'src/**'
      - 'tests/**'
      - '.github/workflows/**'

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Install .NET tools
        run: |
          dotnet tool install -g dotnet-ef
          dotnet tool install -g Microsoft.Web.LibraryManager.Cli
      - name: Install dependencies
        run: dotnet restore
      - name: Install libs
        run: cd src && libman restore
      - name: Build
        run: dotnet build -c Release --no-restore
      - name: Test
        run: dotnet test -c Release --verbosity normal --no-build
      - name: Publish app
        run: dotnet publish src -c Release -o publish-artifacts --no-build
      - name: Create migrations bundle
        run: dotnet ef migrations bundle --configuration Release -p src -o publish-artifacts/bundle --no-build
      - name: Upload artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: publish-artifacts
          path: publish-artifacts
  DeployDev:
    name: Deploy to Dev
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [Build]
    environment:
      name: Dev
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Deploy Azure Resources
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./iac/main.bicep
        parameters: >
            appName=GigLocal
            env=Dev
            containerName=public
            webAppSku=F1
            webAppSkuCapacity=1
            sqlAdminLogin=${{ secrets.AZURE_SQL_LOGIN }}
            sqlAdminPassword=${{ secrets.AZURE_SQL_PASSWORD }}
            sqlDatabaseName=GigLocal
            sqlDatabaseSku=Basic
            authGoogleClientId=${{ secrets.AUTH_GOOGLE_CLIENT_ID }}
            authGoogleClientSecret=${{ secrets.AUTH_GOOGLE_CLIENT_SECRET }}
            authAdminEmail=${{ secrets.AUTH_ADMIN_EMAILS }}
            recaptchaSiteKey=${{ secrets.RECAPTCHA_SITE_KEY }}
            recaptchaSecretKey=${{ secrets.RECAPTCHA_SECRET_KEY }}
            slackGigUploadWebhook=${{ secrets.SLACK_GIG_UPLOAD_WEBHOOK }}
    - name: Set Deployment Outputs
      id: set_outputs
      run: |
        echo "::set-output name=websiteName::$(az deployment group show -g ${{ secrets.AZURE_RG }} -n main --query properties.outputs.websiteName.value | tr -d '"')"
        echo "::set-output name=sqlConnectionString::$(az deployment group show -g ${{ secrets.AZURE_RG }} -n main --query properties.outputs.sqlConnectionString.value | tr -d '"')"
    - name: Download Publish Artifacts
      uses: actions/download-artifact@v2
    - name: Run EF Migrations
      run: |
        cd publish-artifacts
        chmod +x bundle
        ./bundle --connection "${{ steps.set_outputs.outputs.sqlConnectionString }}"
        rm bundle
    - name: Deploy Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ steps.set_outputs.outputs.websiteName }}
        package: publish-artifacts
    - name: Logout of Azure
      run: az logout
  DeployProd:
    name: Deploy to Prod
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [DeployDev]
    environment:
      name: Prod
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Deploy Azure Resources
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./iac/main.bicep
        parameters: >
            appName=GigLocal
            env=Prd
            containerName=public
            customStorageDomain=storage.giglocal.live
            webAppSku=B1
            webAppSkuCapacity=1
            sqlAdminLogin=${{ secrets.AZURE_SQL_LOGIN }}
            sqlAdminPassword=${{ secrets.AZURE_SQL_PASSWORD }}
            sqlDatabaseName=GigLocal
            sqlDatabaseSku=Basic
            authGoogleClientId=${{ secrets.AUTH_GOOGLE_CLIENT_ID }}
            authGoogleClientSecret=${{ secrets.AUTH_GOOGLE_CLIENT_SECRET }}
            authAdminEmail=${{ secrets.AUTH_ADMIN_EMAILS }}
            recaptchaSiteKey=${{ secrets.RECAPTCHA_SITE_KEY }}
            recaptchaSecretKey=${{ secrets.RECAPTCHA_SECRET_KEY }}
            slackGigUploadWebhook=${{ secrets.SLACK_GIG_UPLOAD_WEBHOOK }}
    - name: Set Deployment Outputs
      id: set_outputs
      run: |
        echo "::set-output name=websiteName::$(az deployment group show -g ${{ secrets.AZURE_RG }} -n main --query properties.outputs.websiteName.value | tr -d '"')"
        echo "::set-output name=sqlConnectionString::$(az deployment group show -g ${{ secrets.AZURE_RG }} -n main --query properties.outputs.sqlConnectionString.value | tr -d '"')"
    - name: Download Publish Artifacts
      uses: actions/download-artifact@v2
    - name: Run EF Migrations
      run: |
        cd publish-artifacts
        chmod +x bundle
        ./bundle --connection "${{ steps.set_outputs.outputs.sqlConnectionString }}"
        rm bundle
    - name: Deploy Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ steps.set_outputs.outputs.websiteName }}
        package: publish-artifacts
    - name: Logout of Azure
      run: az logout
