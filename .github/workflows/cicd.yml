name: CI/CD

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.x'
      - name: Install dependencies
        run: dotnet restore src
      - name: Build
        run: dotnet build src -c Release --no-restore
#      - name: Test
#        run: dotnet test tests backend --no-restore --verbosity normal
      - name: Publish
        run: dotnet publish src -c Release -o publish-artifacts --no-restore
      - name: Upload artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: publish-artifacts
          path: publish-artifacts
# dotnet ef migrations script -i -o sqlscript
  DeployDev:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [Build]
    environment:
      name: Dev
    steps:
    - uses: actions/checkout@v2
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Deploy Azure Resources
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        resourceGroupName: ${{ secrets.AZURE_RG }}
        template: ./iac/main.bicep
        parameters: >
            appName=GigLocal
            env=Dev
            containerName=artists
            webAppSku=F1
            webAppSkuCapacity=1
            sqlAdminLogin=${{ secrets.AZURE_SQL_LOGIN }}
            sqlAdminPassword=${{ secrets.AZURE_SQL_PASSWORD }}
            sqlDatabaseName=GigLocal
            sqlDatabaseSku=Basic
    # - name: Download Publish Artifacts
    #   uses: actions/download-artifact@v2
    # - name: Deploy Web App
    #   uses: azure/webapps-deploy@v2
    #   with:
    #     app-name: GigLocalDev
    #     package: publish-artifacts
    # - name: Logout of Azure
    #   run: az logout
